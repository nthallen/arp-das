#! /bin/sh

#__USAGE
#%C	[-o ofile] [ifile ...]
#	-o ofile specifies the name of the output patch file.
#	   The default is ${pkg}_QNX.patch
#
#	Generates a patch file for the application defined in
#	QNX.setup in the current directory. If files are specified,
#	a patch for only those specific files is generated.
#	Files which have been added to the application must be listed
#	either in the "newfiles" variable or in QNX.newfiles.

function nl_error {
  echo mkpatch: $* >&2
  exit 1
}

[ -f QNX.setup ] || nl_error Cannot locate QNX.setup
portpath=`fullpath -t .`
portdir=`basename $portpath`
. QNX.setup

ofile=''

while getopts "o:" option; do
  case $option in
	o) ofile=$OPTARG;;
	\?) echo; exit 1;;
	*) nl_error "Unsupported option: -$option";;
  esac
done
let sval=$OPTIND-1
shift $sval

[ -z "$pkg" ] && nl_error pkg must be defined
[ -z "$ofile" ] && ofile="${pkg}_QNX.patch"
cd ..

[ -d "$pkg" ] || nl_error Cannot locate directory $pkg
[ -d "$pkg.ORIG" ] || nl_error Cannot locate directory $pkg.ORIG
[ -d "$portdir" -a -d "$portpath" ] ||
  nl_error Cannot locate original directory $portpath
echo "mkpatch: Comparing $pkg.ORIG to $pkg"
(
  if [ -n "$1" ]; then
	newfiles=''
	for pfile in ; do
	  if [ ! -f $pkg.ORIG/$pfile -o ! -s $pkg.ORIG/$pfile ]; then
		newfiles="$newfiles $pfile"
	  fi
	done
  elif [ -z "$newfiles" -a -f $portdir/QNX.newfiles ]; then
	newfiles=`cat $portdir/QNX.newfiles`
  fi
  if [ -n "$newfiles" ]; then
	for file in $newfiles; do
	  [ -f "$pkg.ORIG/$file" -a -s "$pkg.ORIG/$file" ] &&
		nl_error $pkg.ORIG/$file exists!
	  [ -f "$pkg/$file" ] || nl_error $pkg/$file missing
	  if [ -s "$pkg/$file" ]; then
		touch $pkg.ORIG/$file
		touched="$touched $pkg.ORIG/$file"
	  fi
	  echo "touch $file"
	done
  fi
  echo "exit 0\n=============\n"
  if [ -n "$1" ]; then
	for pfile in; do
	  echo pfile is $pfile >&2
	  ffile=$pkg.ORIG/$pfile
	  file=$pkg/$pfile
	  cmp -s $file $ffile || diff -c $ffile $file
	done
  else
	for ffile in `find $pkg.ORIG \( -name RCS -prune \) -o \( -type f -print \)`; do
	  file=$pkg/${ffile#$pkg.ORIG/}
	  cmp -s $file $ffile || diff -c $ffile $file
	done
  fi
  [ -n "$touched" ] && rm $touched
) > $portdir/$ofile

echo Output written to $ofile
