Not: "!(" $ ")"
BinOp: $ $ $
Q_Colon: $ " ? " $ " : " $
Paren: "( " $ " )"
FuncCall: $ "( " $ " )"
ArrayRef: $ "[" $ "]"
OrSeq: {"("} $ {") || " [PP_BreakLine] "(" } $ {")"}
AndSeq: {"("} $ {") && " [PP_BreakLine] "(" } $ {")"}

# $1: TrigDef
# $2: RegionDecl
# $3: AverageDecl
# $4: RatedDefs (Elapsed Calcs)
# $5: Region Calcs
# $6: AveragePt
Program : "%{\n"
		  "  /* Output generated by Cycle */\n"
		  "  #include \"average.h\"\n"
		  "%}\n"
		  $ $ $ $ $ $

# $1: Trigger Name  $2: Start  $3: Prestart $4: RateSpec
TriggerDef: "\nint Trigger_" $1 "_Seen, Trigger_" $1 "_Armed;"
			"\ndouble Trigger_" $1 "_Time;"
			"\ndouble Trigger_" $1 "_Elapsed;"
			"\nif ( Trigger_" $1 "_Armed ) {" [PP_Indent]
			  "\nif ( " [PP_Indent] [PP_Indent] $2 [PP_Exdent] " ) {"
			  "\nTrigger_" $1 "_Armed = 0;"
			  "\nTrigger_" $1 "_Seen = 1;"
			  "\nTrigger_" $1 "_Time = dtime();" [PP_Exdent]
			"\n}" [PP_Exdent]
			"\n} else if ( " $3 " ) {" [PP_Indent]
			  "\nTrigger_" $1 "_Armed = 1;" [PP_Exdent]
			"\n}\n"

# $1: TriggerName
ElapsedCalc:
  "\nTrigger_" $1 "_Elapsed = Trigger_" $1 "_Seen ? "
	  "dtime() - Trigger_" $1 "_Time : -1;"

TrigSeen:    "Trigger_" $1 "_Seen"
TrigElapsed: "Trigger_" $1 "_Elapsed"

ElapsedZero: "(Trigger_" $1 "_Elapsed==0)"

# $1: Region
RegionDecl: "\nint Region_" $1 ", Region_" $1 "_Completed;"

# $1: Rate  $2: Region  $3: Inside  $4: Outside  $5: AvgVals
RegionCalc:
  "\ndepending on (" $1 ")" [PP_Indent]
    "\nRegion_" $2 " = " [PP_Indent] $3 ";" [PP_Exdent]	[PP_Exdent]
  "\ndepending on (" $1 ") {" [PP_Indent]
	"\nRegion_" $2 "_Completed = " [PP_Indent] $4 ";" [PP_Exdent]
	"\nif (Region_" $2 "_Completed) {" [PP_Indent]
		$5 [PP_Exdent]
	"\n}" [PP_Exdent]
  "\n}"

# $1: Rate  $2: Whatever
RatedDefs:
  "\ndepending on (" $1 ") {" [PP_Indent]
	  $2 [PP_Exdent]
  "\n}"

# $1: Region,  $2: Variable
AverageDecl:
  "\ndouble " $2 "_" $1 "; invalidate " $2 "_" $1 ";"
AverageDecl2:
  "\nAverage_Data " $2 "_" $1 "_Data;"
AverageDecls:
  "\n" $
  "\n%{" [PP_Indent]
     $ [PP_Exdent]
  "\n%}\n"

# $1: Region,  $2: Variable
AverageVal:
  "\nif (" $2 "_" $1 "_Data.count > 0) {" [PP_Indent]
	"\n" $2 "_" $1 " = Average_Value( &" $2 "_" $1 "_Data );"
	"\nValidate " $2 "_" $1 ";" [PP_Exdent]
  "\n}"

# $1: Region,  $2: Variable, $3: Convert, $4: Discard
AveragePt:
  "\nif (Region_" $1 $4 ") {" [PP_Indent]
	"\nAverage_Point( &" $2 "_" $1 "_Data, " $3 "(" $2 ") );"
			[PP_Exdent]
  "\n}"
