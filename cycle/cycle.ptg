Not: "!(" $ ")"
BinOp: $ $ $
Q_Colon: $ " ? " $ " : " $
Paren: "( " $ " )"
FuncCall: $ "( " $ " )"
ArrayRef: $ "[" $ "]"
OrSeq: {"("} $ {") || ("} $ {")"}
AndSeq: {"("} $ {") && ("} $ {")"}

# $1: TrigDef
# $2: RegionDecl
# $3: AverageDecl
# $4: RatedDefs (Elapsed Calcs)
# $5: Region Calcs
# $6: AveragePt
Program : "%{\n"
		  "  /* Output generated by Cycle */\n"
		  "  #include \"average.h\"\n"
		  "%}\n"
		  $ "\n" $ "\n" $ "\n" $ $ $

# $1: Trigger Name  $2: Start  $3: Prestart $4: RateSpec
TriggerDef: "\nint Trigger_" $1 "_Seen, Trigger_" $1 "_Armed;\n"
			"double Trigger_" $1 "_Time;\n"
			"double Trigger_" $1 "_Elapsed;\n"
			"if ( Trigger_" $1 "_Armed ) {\n"
			"  if ( " $2 " ) {\n"
			"	Trigger_" $1 "_Armed = 0;\n"
			"	Trigger_" $1 "_Seen = 1;\n"
			"	Trigger_" $1 "_Time = dtime();\n"
			"  }\n"
			"} else if ( " $3 " ) {\n"
			"  Trigger_" $1 "_Armed = 1;\n"
			"}\n"

# $1: TriggerName
ElapsedCalc:
  "  Trigger_" $1 "_Elapsed = Trigger_" $1 "_Seen ? "
	  "dtime() - Trigger_" $1 "_Time : -1;\n"

TrigSeen:    "Trigger_" $1 "_Seen"
TrigElapsed: "Trigger_" $1 "_Elapsed"

ElapsedZero: "(Trigger_" $1 "_Elapsed==0)"

# $1: Region
RegionDecl: "int Region_" $1 ", Region_" $1 "_Completed;\n"

# $1: Rate  $2: Region  $3: Inside  $4: Outside  $5: AvgVals
RegionCalc:
  "depending on (" $1 ")\n"
  "  Region_" $2 " = " $3 ";\n"
  "depending on (" $1 ") {\n"
  "  Region_" $2 "_Completed = " $4 ";\n"
  "  if (Region_" $2 "_Completed) {\n"
  $5
  "  }\n"
  "}\n"

# $1: Rate  $2: Whatever
RatedDefs: "depending on (" $1 ") {\n" $2 "}\n"

# $1: Region,  $2: Variable
AverageDecl:
  "double " $2 "_" $1 "; invalidate " $2 "_" $1 ";\n"
AverageDecl2:
  "  Average_Data " $2 "_" $1 "_Data;\n"
AverageDecls:
  $
  "%{\n"
   $
  "%}\n"

# $1: Region,  $2: Variable
AverageVal:
  "    if (" $2 "_" $1 "_Data.count > 0) {\n"
  "      " $2 "_" $1 " = Average_Value( &" $2 "_" $1 "_Data );\n"
  "      Validate " $2 "_" $1 ";\n"
  "    }\n"

# $1: Region,  $2: Variable, $3: Convert, $4: Discard
AveragePt:
  "if (Region_" $1 $4 ") {\n"
  "  Average_Point( &" $2 "_" $1 "_Data, " $3 "(" $2 ") );\n"
  "}\n"
