/* $1: PTGNode StringPrint */
/* $2: PTGNode RulePrint */
/* $3: PTGNode FieldPrint */
/* $4: table name (string) */
/* $5: rows */
/* $6: columns */
/* $7: rule definitions */
File:
  "%{\n"
  "  /* nctable output */\n"
  "  #include \"nctable.h\"\n"
  "  static int " $4 string "_winnum;\n\n"
  $7 "\n"
  "  static void " $4 string "_redraw(void) {\n"
  "    nct_clear(" $4 string "_winnum);\n"
  $1
  $2
  "  }\n\n"
  "  static void " $4 string "_init(void) {\n"
  "    " $4 string "_winnum = nct_init(\"" $4 string "\","
	  $5 int "," $6 int ");\n"
  "    " $4 string "_redraw();\n"
  "  }\n"
  "%}\n"
  "TM INITFUNC " $4 string "_init();\n"
  $3

/* PTGField(table_name,name,r,c,w,h) */
Field:
  "nct_string( " $1 string "_winnum, 2, " $3 int ", " $4 int
    ", text(" $2 ") );\n"

/* row, col, attr, string, window */
/*  Produce output only if string is non-empty */
String: "    nct_string( " $5 string "_winnum, "
	  $3 int ", " $1 int ", " $2 int
	  ", \"" $4 "\" );\n"

RuleDef: "  static unsigned char nct_" $1 "_r" $2 int "[] = { " $3 ", 0 };\n"
/* ID#, tblname string, r, c, a ints */
HRule: "    nct_hrule( " $2 "_winnum, " $5 int ", "
	      $3 int ", " $4 int ", nct_" $2 "_r" $1 int " );\n"
VRule: "    nct_vrule( " $2 "_winnum, " $5 int ", "
	      $3 int ", " $4 int ", nct_" $2 "_r" $1 int " );\n"

