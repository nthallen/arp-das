struct tmsort from genpcm.c moved to tmcstr.h and renamed tmalloc
flags moved from struct tmdtm to struct tmalloc
created struct validator to separate out validation stuff from declrtor
eliminated distinction between tm types and other types
add tm_type pointer in typeparts to ease parsing
removed rate and sltcw from tmdtm, replaced with tmalloc *tmdef
eliminated NMTYPE_TYPE
eliminate NMTYPE_CONVERSION and NMTYPE_TM (unused)
created struct dtm to handle normal (non-tm) data.
replaced nameref::decl with struct dtm *ddecl;

yytype.h
 changed declval to declrtor

tmc.y
 restructuring declarations
 declarator: delay definition of nameref type
 validator code removed from declrtor. add to validator
		$$->flag = DCLF_VALID;
		$$->val = NULL;
		initstat(&$$->valstat, NULL);
 removed tmalloc code from make_tmd() for placement in new_tmalloc()
  new_tmalloc(rate);
  tmd->flags = Collecting ? 0 : TMDF_HOMEROW;
  tmd->rate = *rate;

yylex.l
  removed reference to NMTYPE_TYPE

genpcm.c
  Synch and MFCtr must be declared as TM type now.
  eliminated from synmfr: {
  dsort->rate = *rate;
  dsort->size = 2;
  dsort->nameref = find_name(name, 0);
  if (dsort->nameref == NULL)
	tmc_error(3, "%s not defined", name);
  if (dsort->nameref->type == NMTYPE_TMDATUM)
	tmc_error(3, "%s must not be defined as TM datum", name);
  if (dsort->nameref->type != NMTYPE_DATUM)
	tmc_error(3, "%s not defined as datum", name);
  assert(dsort->nameref->u.decl != NULL);
  if (dsort->nameref->u.decl->size != 2)
	tmc_error(3, "%s not of size 2", name);
  make_tmd(dsort->nameref->u.decl, rate);
  /* Leave this out: clear only for collection when everything else is */
  /* dsort->nameref->u.tmdecl->flags &= ~TMDF_HOMEROW; */
}

pdecls.c
  in print_pcm() I changed references to tmd->decl->size to tma->size

pfuncs.c
  removed parentheses from validator function call output in order
  to support state variable invalidator functions.