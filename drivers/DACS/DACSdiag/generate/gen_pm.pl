#! /usr/bin/perl -w
# Responsible for generating pwrmon.tmc, pwrmon.tbl
#   and pwrmon_conv.tmc

my $srcdir = $ARGV[0];
my $n_pm_bds = $ARGV[1] || die "Must specify N_PWRMON\n";
my $odir = $srcdir || ".";
-d $srcdir || die "Source directory '$srcdir' not found\n";
open( my $tmc, '>', "$srcdir/pwrmon.tmc" ) ||
  die "Unable to write to '$srcdir/pwrmon.tmc'\n";
open( my $conv, '>', "$srcdir/pwrmon_conv.tmc" ) ||
  die "Unable to write to '$srcdir/pwrmon_conv.tmc'\n";
open( my $tbl, '>', "$srcdir/pwrmon.tbl" ) ||
  die "Unable to write to '$srcdir/pwrmon.tbl'\n";

print $conv <<EOF
%{
  /* pwrmon_conv.tmc generated by gen_pm.pl */
  const char *PMTO_text[] = { "       ", "Timeout" };
  const char *PMOK_text[] = { "*", " " };
%}
TM typedef unsigned char PMTO { text "%7d" PMTO_text[]; }
TM typedef unsigned char PMOK { text "%2d" PMOK_text[]; }

EOF
;

my @pm_bds;

print $tmc
  "%{\n  /* pwrmon.tmc generated by gen_ctr.pl */\n",
  "  #include \"subbus.h\"\n",
  "%}\n";
for my $pm_bd ( 0 .. $n_pm_bds-1 ) {
  my $bdname = "PM_${pm_bd}";
  push( @pm_bds, $bdname );

  my $base = 0x360 + $pm_bd * 0x10;
  my $stataddr = sprintf( "0x%X", $base );
  my $statname = "PM${pm_bd}Stat";

  print $tmc
    "TM 4 Hz PwrMon_S $statname; Address $statname $stataddr;\n";
  my $TOStat = "PM${pm_bd}TO";
  print $conv
    "PMTO $TOStat; invalidate $TOStat;\n",
    "  { $TOStat = ($statname >> 4) & 1; Validate $TOStat; }\n";

  my ($I1name, $I1Sname ) =
    write_tmc( $tmc, $conv, $base+2, $pm_bd, "I", 1, 0, $statname );
  my ($V1name, $V1Sname ) =
    write_tmc( $tmc, $conv, $base+4, $pm_bd, "V", 1, 1, $statname );
  my ($I2name, $I2Sname ) =
    write_tmc( $tmc, $conv, $base+6, $pm_bd, "I", 2, 2, $statname );
  my ($V2name, $V2Sname ) =
    write_tmc( $tmc, $conv, $base+8, $pm_bd, "V", 2, 3, $statname );

  print $tbl
    "$bdname {\n",
    "  HBox { +-; Title: \"PwrMon $pm_bd\"; -+ };\n",
    "  >($TOStat,7)<;\n",
    "  \"\"   >I<   >V<;\n",
    "  \"1:\" HBox{ ($I1name,5); ($I1Sname,1) } HBox{ ($V1name,5); ($V1Sname,1) };\n",
    "  \"2:\" HBox{ ($I2name,5); ($I2Sname,1) } HBox{ ($V2name,5); ($V2Sname,1) };\n",
    "}\n\n";
}

print $tbl "{ HBox { |+; ",
  map( "[$_]; |+;", @pm_bds ),
  " };\n",
  "  -;\n",
  "  >{ Time: (flttime,8) MFCtr: (MFCtr,5) }\n",
  "}\n";

close $tmc;
close $conv;
close $tbl;

sub write_tmc {
  my ( $tmc, $conv, $addr, $bd, $type, $n, $bit, $statname ) = @_;
  my $name = "PM$bd$type$n";
  my $Sname = "${name}S";
  printf $tmc
    "TM 4 Hz PwrMon_$type $name; Address $name 0x%X;\n", $addr;
  print $conv
    "PMOK $Sname; invalidate $Sname;\n",
    "  { $Sname = ($statname>>$bit)&1; Validate $Sname; }\n";
  return( ( $name, $Sname ) );
}
