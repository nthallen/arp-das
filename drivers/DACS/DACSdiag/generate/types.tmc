TM typedef double VOLTS { text "%6.3lf"; }
TM typedef double mVOLTS { text "%6.3lf"; }
TM typedef double AMPS  { text "%6.3lf"; }
TM typedef unsigned short UINT { text "%5d"; }
TM typedef   signed short AI16 { text "%7.4lf"; convert VOLTS; }
TM typedef unsigned short AIC  { text "%4x"; }
TM typedef unsigned short AO16 {
  text "%6.4lf";
  convert VOLTS;
  collect x = sbrwa(x.address);
}

Calibration (AI16,VOLTS) {
  0, 0,
  32768, 4.096
}

Calibration (AO16, VOLTS) {
  0, 0,
  65536, 10
}

TM typedef AI16 PBI { text "%5.2lf"; convert AMPS; }
  Calibration (PBI,AMPS) {
    -800, .0218,
    40000, 4.9831
  }

TM typedef unsigned short AIStat_i {
  text "%012b";
  Collect x = sbrwa(x.address);
}

TM typedef unsigned char MS5607Db { text "%3d"; }
TM typedef UINT PTRH_S { text " %04x"; }
TM typedef double PTRHT_t { text "%5.1lf"; }
TM typedef double SHT21RH_t { text "%4.1lf"; }
TM typedef double PTRHP_t { text "%7.2lf"; }

/* QCLI/SSP types */
TM typedef double CELCIUS;
TM typedef long L20 { text "%8ld"; }

%{
  const char *off_on_text[] = { "off", " on" };
%}
TM typedef int off_on_t { text "%3d" off_on_text[]; }

/* Counter types */
%{
  #define CT24long(x) ((long)((x).low) + (((unsigned long)((x).high))<<16))
%}
TM typedef UINT CT16 { collect x = sbrwa( x.address ); }
TM typedef CT16 CTstat { text "%04x"; }

TM typedef struct {
  unsigned short low;
  unsigned char high;
} CT24 {
  text "%8ld";
  convert L20 CT24long();
}

/* Power Monitor types */
TM typedef unsigned short PwrMon_I {
  text "%5.2lf";
  collect x = sbrwa(x.address);
  convert mVOLTS;
}
Calibration (PwrMon_I,mVOLTS) { 0, 0, 16, 0.020 }

TM typedef unsigned short PwrMon_V {
  text "%7.3lf";
  collect x = sbrwa(x.address);
  convert VOLTS;
}
Calibration (PwrMon_V,VOLTS) { 0, 0, 16, 0.025 }

TM typedef unsigned char PwrMon_S {
  text "%3u";
  collect x = sbrba(x.address);
}

TM 4 Hz UINT Synch, MFCtr;
