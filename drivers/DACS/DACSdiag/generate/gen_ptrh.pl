#! /usr/bin/perl -w
# Responsible for generating ptrh.tmc ptrh_col.tmc ptrh.tbl ptrh_conv.tmc

my $srcdir = $ARGV[0];
my $n_ptrh = $ARGV[1] || die "Must specify N_PTRH\n";
my $odir = $srcdir || ".";
-d $srcdir || die "Source directory '$srcdir' not found\n";
open( my $tmc, '>', "$srcdir/PTRH.tmc" ) ||
  die "Unable to write to '$srcdir/PTRH.tmc'\n";
open( my $col, '>', "$srcdir/PTRH_col.tmc" ) ||
  die "Unable to write to '$srcdir/PTRH_col.tmc'\n";
open( my $tbl, '>', "$srcdir/PTRH.tbl" ) ||
  die "Unable to write to '$srcdir/PTRH.tbl'\n";
open( my $conv, '>', "$srcdir/PTRH_conv.tmc" ) ||
  die "Unable to write to '$srcdir/PTRH_conv.tmc'\n";

print $tmc
  "%{\n  /* ptrh.tmc generated by gen_ptrh.pl */\n",
  "  #include \"ptrhm.h\"\n";
for my $ptrh (0 .. $n_ptrh-1) {
  my $addr = sprintf( "0x%X", 0x200 + $ptrh * 0x20 );
  print $tmc "  ptrhm PTRH$ptrh = ",
    "ptrhm(\"PTRH$ptrh\",$addr,0xB177,0x9A58,0x6DBF,0x62BA,0x81BF,0x6C80);\n";
}
print $tmc "%}\n";

print $col
  "/* ptrh_col.tmc generated by gen_ptrh.pl */\n",
  map( "TM INITFUNC PTRH$_.check_coeffs();\n",
    0 .. $n_ptrh-1 );

print $tbl <<EOF
/* ptrh.tbl generated by gen_ptrh.ppl */
EOF
  ;
  
print $conv <<EOF
/* ptrh_conv.tmc generated by gen_ptrh.pl */
EOF
  ;

for my $ptrh (0 .. $n_ptrh-1) {
  my @group;
  print $tmc <<EOF
TM 1 Hz UINT PTRH${ptrh}_T1;
TM 1 Hz UINT PTRH${ptrh}_RH;
TM 1 Hz UINT PTRH${ptrh}_T2a;
TM 1 Hz MS5607Db PTRH${ptrh}_T2b;
TM 1 Hz UINT PTRH${ptrh}_Pa;
TM 1 Hz MS5607Db PTRH${ptrh}_Pb;
TM 1 Hz PTRH_S PTRH${ptrh}_PTRHS;

Group PTRH${ptrh} ( PTRH${ptrh}_T1, PTRH${ptrh}_RH, PTRH${ptrh}_T2a,
    PTRH${ptrh}_T2b, PTRH${ptrh}_Pa, PTRH${ptrh}_Pb, PTRH${ptrh}_PTRHS ) {
  PTRH${ptrh}.acquire();
  PTRH${ptrh}_T1 = PTRH${ptrh}.SHT21T();
  PTRH${ptrh}_RH = PTRH${ptrh}.SHT21RH();
  PTRH${ptrh}_T2a = PTRH${ptrh}.MS5607Ta();
  PTRH${ptrh}_T2b = PTRH${ptrh}.MS5607Tb(); 
  PTRH${ptrh}_Pa = PTRH${ptrh}.MS5607Pa();
  PTRH${ptrh}_Pb = PTRH${ptrh}.MS5607Pb(); 
  PTRH${ptrh}_PTRHS = PTRH${ptrh}.Status();
}
EOF
  ;

  print $conv <<EOF

PTRHT_t PTRH${ptrh}_T1C; invalidate PTRH${ptrh}_T1C;
{ PTRH${ptrh}_T1C = PTRH${ptrh}.SHT21T(PTRH${ptrh}_T1);
  Validate PTRH${ptrh}_T1C; }
PTRHT_t PTRH${ptrh}_T2C; invalidate PTRH${ptrh}_T2C;
{ PTRH${ptrh}_T2C = PTRH${ptrh}.MS5607T(PTRH${ptrh}_T2a, PTRH${ptrh}_T2b);
  Validate PTRH${ptrh}_T2C; }
SHT21RH_t PTRH${ptrh}_RHC; invalidate PTRH${ptrh}_RHC;
{ PTRH${ptrh}_RHC = PTRH${ptrh}.SHT21RH(PTRH${ptrh}_RH);
  Validate PTRH${ptrh}_RHC; }
PTRHP_t PTRH${ptrh}_P; invalidate PTRH${ptrh}_P;
{ PTRH${ptrh}_P =
    PTRH${ptrh}.MS5607P(PTRH${ptrh}_Pa, PTRH${ptrh}_Pb) * 760./1013.;
  Validate PTRH${ptrh}_P; }
EOF
  ;
}

print $tbl <<EOF
{ ""   >RH_T  >P_T  >RH  >P;
  ""    >C     >C   >"%" >Torr  >Status;
EOF
;

for my $ptrh (0 .. $n_ptrh-1) {
  print $tbl "  \"$ptrh:\"  (PTRH${ptrh}_T1C,5) (PTRH${ptrh}_T2C,5) ",
    "(PTRH${ptrh}_RHC,4) (PTRH${ptrh}_P,7) (PTRH${ptrh}_PTRHS,3);\n";
}

print $tbl
  "  -;\n",
  "  >{ Time: (flttime,8) MFCtr: (MFCtr,5) }\n",
  "}\n";
  
close $tmc;
close $col;
close $tbl;
close $conv;
