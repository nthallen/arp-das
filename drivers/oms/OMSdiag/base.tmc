%{
  #include "omsdrv.h"
  OMS_TM_Data OMS_status;
%}

TM typedef unsigned short UINT { text "%5u"; }
TM typedef signed long SLONG { text "%9ld"; }
TM typedef unsigned char oms_stat_t { text "%4u" oms_stat_text(); }

%{
  static const char *oms_stat_graph[] = {
    " <- ",
    " <-H",
    "|<- ",
    "|<-H",
    " <  ",
    " < H",
    "|<  ",
    "|< H",
    "->  ",
    "-> H",
    "->| ",
    "->|H",
    " >  ",
    " > H",
    " >| ",
    " >|H"
  };
  static const char *oms_stat_text(oms_stat_t s) {
    return oms_stat_graph[s & 0xF];
  }
%}

TM 1 Hz UINT MFCtr, Synch;
TM 1 Hz SLONG OMS_0_Step;
TM 1 Hz SLONG OMS_1_Step;
TM 1 Hz SLONG OMS_2_Step;
TM 1 Hz SLONG OMS_3_Step;
TM 1 Hz oms_stat_t OMS_0_Stat;
TM 1 Hz oms_stat_t OMS_1_Stat;
TM 1 Hz oms_stat_t OMS_2_Stat;
TM 1 Hz oms_stat_t OMS_3_Stat;
TM 1 Hz UINT OMS_Stale;

TM "Receive" OMS_status 1;

Group OMS_Stat (OMS_0_Step, OMS_1_Step, OMS_2_Step, OMS_3_Step,
		OMS_0_Stat, OMS_1_Stat, OMS_2_Stat, OMS_3_Stat ) {
  OMS_0_Step = OMS_status.step[0];
  OMS_1_Step = OMS_status.step[1];
  OMS_2_Step = OMS_status.step[2];
  OMS_3_Step = OMS_status.step[3];
  OMS_0_Stat = OMS_status.status[0];
  OMS_1_Stat = OMS_status.status[1];
  OMS_2_Stat = OMS_status.status[2];
  OMS_3_Stat = OMS_status.status[3];
  OMS_Stale = OMS_status_obj->stale();
  OMS_status_obj->synch();
}
