%{
  /* Routines to access onboard temperature readings
     from Versalogic Mamba EBX-37F motherboard.
     CPU Die Temperature is reported in the Machine (Model) Specific Register
     0x19c.
   */
  #include <errno.h>
  #include <strings.h>
  #include <hw/inout.h>
  #include <unistd.h> // for delay()
  #include <atomic.h>
  #include <sys/neutrino.h>
  #include <x86/priv.h>
  #include "msg.h"

  //CPU MSR definitions
  #define IA32_THERM_STS_MSR          0x19C
  #define IA32_THERM_RD_VALID         0x80000000
  #define IA32_THERM_STS_DIGRD        0x007F0000
  #define IA32_THERM_STS_FLAGS        0x00000140
  #define EXT_CONFIG_MSR              0x0EE
  #define IA32_TJ90                   0x40000000
  #define MSR_READ_REQ 1

  typedef struct {
    volatile uint32_t MSR_id;
    volatile uint64_t MSR_val;
    volatile unsigned flags;
  } MSR_data;

  const struct sigevent *RdMsrHandler(void *area, int id) {
    MSR_data *MSR_p = (MSR_data *)area;
    
    if (MSR_p->flags | MSR_READ_REQ) {
      MSR_p->MSR_val = rdmsr(MSR_p->MSR_id);
      atomic_clr(&MSR_p->flags,MSR_READ_REQ);
    }
    return NULL;
  }

  unsigned char read_ebx37f_temp() {
    MSR_data MSR_d;
    int Int_id;
    MSR_d.MSR_id = IA32_THERM_STS_MSR;
    MSR_d.flags = MSR_READ_REQ;
    MSR_d.MSR_val = 0;
    Int_id = InterruptAttach(0, &RdMsrHandler, &MSR_d, sizeof(MSR_d),
        _NTO_INTR_FLAGS_END | _NTO_INTR_FLAGS_TRK_MSK);
    if (Int_id == -1)
      nl_error(3, "Error attaching clock interrupt");
    delay(1);
    if (InterruptDetach(Int_id) == -1)
      nl_error(2, "Error calling InterruptDetach");
    if ((MSR_d.flags & MSR_READ_REQ) ||
        !(MSR_d.MSR_val & IA32_THERM_RD_VALID))
      return 127;
    return 105-((MSR_d.MSR_val & IA32_THERM_STS_DIGRD) >> 16);
  }

  void ebx37f_temp_init() {
    if (ThreadCtl(_NTO_TCTL_IO, 0) == -1)
      msg(3, "ThreadCtl error: %s", strerror(errno));
  }
%}

TM INITFUNC ebx37f_temp_init();
