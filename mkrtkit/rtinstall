#!/qnxbase/bin/sh

SRCPATH=$1

# We need it later on even if the user ejects the CD
cp /qnxbase/bin/shutdown /dev/shmem/

# This is a slightly non-standard runtime environment
export PATH=/qnxbase/bin:/qnxbase/usr/bin:/qnxbase/sbin:/qnxbase/usr/sbin:$PATH
export LD_LIBRARY_PATH=/qnxbase/lib:/qnxbase/usr/lib:/qnxbase/lib/dll:$LD_LIBRARY_PATH

pipe &
on -W 60 -w /dev/pipe

ln -sP /dev/shmem /tmp

# For those scripts that need it
ln -sP /qnxbase/bin/sh /bin/sh
ln -sP /qnxbase/usr/lib/terminfo /usr/lib/terminfo
export TERM=qansi-m


###############################################################################
# functions
###############################################################################

getresp() {
  printf "$1 [$2] "
  read resp
  if test "X$resp" = "X" ; then
    resp=$2
  fi
}

function install {
  cfg=$1
  fs=$2
  for ftype in t179 t79 t78 t77; do
    if [ $(fdisk /dev/hd0 query -$ftype) -ne 0 ]; then
      echo "Error: $ftype partition already exists on first hard disk" 1>&2 
      echo "Aborting installation" 1>&2 
      return 1
    fi
  done

  if [ ! -f "$SRCPATH/repository/$cfg.cfg" ]; then
    echo "Unknown config: '$cfg'"
    return 1
  fi

  switch $fs in
    qnx4)
      fdisk /dev/hd0 add -t79
      fdisk /dev/hd0 boot -t79
      fdisk /dev/hd0 loader
      mount -e /dev/hd0
      dinit -h -f $SRCPATH/boot/fs/qnxbase.ifs /dev/hd0t79
      mount -tqnx4 /dev/hd0t79 /install
      if [ ! -d/install ]; then
	echo "Error mountint /install"
	return 1
      fi;;
    qnx6)
      fdisk /dev/hd0 add -t179
      fdisk /dev/hd0 boot -t179
      fdisk /dev/hd0 loader
      mount -e /dev/hd0
      mkqnx6fs -Tdesktop /dev/hd0t179
      mount -tqnx6 /dev/hd0t179 /install
      if [ ! -d /install ]; then
	echo "Error mounting /install"
	return 1
      fi
      cp $SRCPATH/boot/fs/*.ifs /install/.boot/;;
    *)
      echo "Unrecognized filesystem option"
      return 1;;
  esac

  cd /install
  while read arch; do
    echo "Extraction $SRCPATH/repository/$arch"
    tar -zxf $SRCPATH/repository/$arch
  done

  # This bit is here since the system really wants everything 
  # rooted at / but the archives include files in x86/*. If x86 
  # is a directory, then we put things right. The alternative is to 
  # do the right thing when making the archives.
  if [ -d x86 ]; then
    echo Found an /x86 directory
    cp -cRp x86/* .
    rm -rf x86
  fi
  if [ ! -e x86 ]; then
    echo Creating /x86 link
    ln -s . x86
  fi

  mkdir -p /install/boot/fs
  cp $SRCPATH/boot/fs/*.ifs /install/boot/fs/

  echo "mount=/" >/install/.diskroot

  [ -d /install/etc/system/config ] || mkdir -p /install/etc/system/config
  touch /install/etc/system/config/nophoton

  echo Installation complete
}

crntcfg=''
filesystem=qnx6

function select_cfg {
  cd $SRCPATH/repository
  echo Available Install Sets:
  n=1
  defn=1
  for cfg in *.cfg; do
    if [ -f $cfg ]; then
      cfg=${cfg%.cfg}
      [ "$crntcfg" = "" ] && crntcfg=$cfg;
      if [ $crntcfg = $cfg ]; then
        iscrnt='*'
        defn=$n
      else
        iscrnt=' '
      fi
      echo "  $n $iscrnt $cfg"
      eval "cfg_$n=$cfg"
    fi
    let n=n+1
  done
  getresp Configuration $defn
  eval "newcfg=\${cfg_$resp}"
  if [ -n "$newcfg" -a -f "$newcfg.cfg" ]; then
    crntcfg=$newcfg;
  else
    echo "\aUnrecognized response"
  fi
}

function toggle_fs {
  case $filesystem in
    qnx6) filesystem=qnx4;;
    *) filesystem=qnx6;;
  esac
}

while true; do
  cd $SRCPATH/repository
  echo
  echo ========================================
  echo Available Install Sets:
  for cfg in *.cfg; do
    if [ -f $cfg ]; then
      cfg=${cfg%.cfg}
      [ "$crntcfg" = "" ] && crntcfg=$cfg;
      if [ $crntcfg = $cfg ]; then
        iscrnt='*'
      else
        iscrnt=' '
      fi
      echo "  $iscrnt $cfg"
    fi
  done
  cd /
  echo "Filesystem for install [qnx4|qnx6]: $filesystem"
  echo "[qnx4 is currently recommended for flash drives]"
  echo ========================================
  echo "1 Install $crntcfg $filesystem"
  echo "2 Select Install Set"
  echo "3 Toggle Install Filesystem"
  echo "4 Invoke fdisk manually"
  echo "5 Shell"
  echo "6 Shutdown"
  echo "7 Reboot"
  getresp Option: 1
  case $resp in
    1) install $crntcfg $filesystem;;
    2) select_cfg;;
    3) toggle_fs;;
    4) fdisk /dev/hd0;;
    5) sh;;
    6) shutdown -b;;
    7) shutdown;;
    *) echo "\aUnrecognized option";;
  esac
done
